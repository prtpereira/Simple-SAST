package org.checkmarx.codescanner.util;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.checkmarx.codescanner.model.Vulnerability;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.List;


public class VulnerabilityWriter {

    public void writeToFile(List<Vulnerability> vulnerabilities, String fileFormat, String outputPath) {
        switch (fileFormat) {
            case "plaintext" -> writeToTxt(vulnerabilities, outputPath + "/vulnerabilities.txt");
            case "json"      -> writeToJson(vulnerabilities, outputPath + "/vulnerabilities.json");
            default -> System.err.println("File format '" + fileFormat + "' is not supported.");
        }
    }

    private void writeToTxt(List<Vulnerability> vulnerabilities, String filePath) {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(filePath))) {

            vulnerabilities.forEach( vulnerability -> {
                try {
                    writer.write("[" + vulnerability.getVulnerabilityType() + "] in file \"" + vulnerability.getFileName() + "\" on line " + vulnerability.getLineNumber() + "\n");
                } catch (IOException e) {
                    System.err.println("Error writing vulnerabilities to plaintext file: " + e.getMessage());
                }
            });

            System.out.println("Plaintext data has been successfully written to: " + filePath);

        } catch (IOException e) {
            System.err.println("File cannot be created or opened: " + filePath + " Error: " + e.getMessage());
        }
    }

    private void writeToJson(List<Vulnerability> vulnerabilities, String filePath) {
        try {
            ObjectMapper objectMapper = new ObjectMapper();
            objectMapper.enable(SerializationFeature.INDENT_OUTPUT);

            objectMapper.writeValue(new File(filePath), vulnerabilities);

            System.out.println("JSON data has been successfully written to: " + filePath);

        } catch (IOException e) {
            System.out.println("Error writing vulnerabilities to JSON file: " + e.getMessage());
        }
    }
}
