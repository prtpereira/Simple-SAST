<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="a60653de-8ece-4ffc-8aa0-8c24a6bcf600" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/src/main/java/org/checkmarx/codescanner/service/VulnerabilityFinderCallable.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/checkmarx/codescanner/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/checkmarx/codescanner/Main.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/checkmarx/codescanner/service/CodeScannerService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/checkmarx/codescanner/service/CodeScannerService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/checkmarx/codescanner/util/security/CrossSiteScriptingChecker.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/checkmarx/codescanner/util/security/CrossSiteScriptingChecker.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/checkmarx/codescanner/util/security/SQLInjectionChecker.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/checkmarx/codescanner/util/security/SQLInjectionChecker.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/checkmarx/codescanner/util/security/SecurityChecker.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/checkmarx/codescanner/util/security/SecurityChecker.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/org/checkmarx/codescanner/util/security/SensitiveDataChecker.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/checkmarx/codescanner/util/security/SensitiveDataChecker.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/org/checkmarx/codescanner/unit/security/SecurityCheckerTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/org/checkmarx/codescanner/unit/security/SecurityCheckerTest.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="useMavenConfig" value="true" />
      </MavenGeneralSettings>
    </option>
    <option name="importingSettings">
      <MavenImportingSettings>
        <option name="workspaceImportEnabled" value="true" />
      </MavenImportingSettings>
    </option>
  </component>
  <component name="ProjectId" id="2ax2DX1cqIL5yLupN7mvKZ4bakP" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "last_opened_file_path": "C:/Users/apere/Repos/challenges2023/sast-checkmarx/Simple-SAST",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "run.code.analysis.last.selected.profile": "pProject Default",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\apere\Repos\challenges2023\sast-checkmarx\Simple-SAST" />
      <recent name="C:\Users\apere\Repos\challenges2023\sast-checkmarx\Simple-SAST\src\test\inpput_files" />
      <recent name="C:\Users\apere\Repos\challenges2023\sast-checkmarx\Simple-SAST\output_vulnerabilities" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="org.checkmarx.codescanner.util.security" />
      <recent name="org.checkmarx.codescanner.util" />
    </key>
  </component>
  <component name="RunManager" selected="JUnit.SecurityCheckerTest">
    <configuration name="Main" type="Application" factoryName="Application">
      <option name="MAIN_CLASS_NAME" value="org.checkmarx.codescanner.Main" />
      <module name="sast-checkmarx" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="CodeScannerServiceIT" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="sast-checkmarx" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.checkmarx.codescanner.integration.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.checkmarx.codescanner.integration" />
      <option name="MAIN_CLASS_NAME" value="org.checkmarx.codescanner.integration.CodeScannerServiceIT" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="SQLInjectionCheckerTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="sast-checkmarx" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.checkmarx.codescanner.unit.security.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.checkmarx.codescanner.unit.security" />
      <option name="MAIN_CLASS_NAME" value="org.checkmarx.codescanner.unit.security.SQLInjectionCheckerTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="SQLInjectionCheckerTest.testMultipleSQLInjectionChecker" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="sast-checkmarx" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.checkmarx.codescanner.unit.security.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.checkmarx.codescanner.unit.security" />
      <option name="MAIN_CLASS_NAME" value="org.checkmarx.codescanner.unit.security.SQLInjectionCheckerTest" />
      <option name="METHOD_NAME" value="testMultipleSQLInjectionChecker" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="SQLInjectionCheckerTest.testSQLInjectionChecker" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="sast-checkmarx" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.checkmarx.codescanner.unit.security.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.checkmarx.codescanner.unit.security" />
      <option name="MAIN_CLASS_NAME" value="org.checkmarx.codescanner.unit.security.SQLInjectionCheckerTest" />
      <option name="METHOD_NAME" value="testSQLInjectionChecker" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="SecurityCheckerTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="sast-checkmarx" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.checkmarx.codescanner.unit.security.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.checkmarx.codescanner.unit.security" />
      <option name="MAIN_CLASS_NAME" value="org.checkmarx.codescanner.unit.security.SecurityCheckerTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Application.Main" />
      <item itemvalue="JUnit.CodeScannerServiceIT" />
      <item itemvalue="JUnit.SQLInjectionCheckerTest" />
      <item itemvalue="JUnit.SQLInjectionCheckerTest.testMultipleSQLInjectionChecker" />
      <item itemvalue="JUnit.SQLInjectionCheckerTest.testSQLInjectionChecker" />
      <item itemvalue="JUnit.SecurityCheckerTest" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.SecurityCheckerTest" />
        <item itemvalue="JUnit.CodeScannerServiceIT" />
        <item itemvalue="JUnit.SQLInjectionCheckerTest" />
        <item itemvalue="JUnit.SQLInjectionCheckerTest.testMultipleSQLInjectionChecker" />
        <item itemvalue="JUnit.SQLInjectionCheckerTest.testSQLInjectionChecker" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="028627b1-da67-44cd-bb8d-23d3a50b8a51" name="Changes" comment="" />
      <created>1705245794793</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1705245794793</updated>
      <workItem from="1705245796169" duration="690000" />
      <workItem from="1705246499408" duration="4016000" />
      <workItem from="1705320053934" duration="30810000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>